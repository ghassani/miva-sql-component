<MIVA STANDARDOUTPUTLEVEL="" IDENT="$Id: sql-queries.mv 20 2014-12-04 04:20:00Z gidriss $">

<MvCOMMENT>
    This file is part of Spliced MvDO Component.

    SQL Query Component is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    SQL Query is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SQL Query Component.  If not, see <http://www.gnu.org/licenses/>.

</MvCOMMENT>

<MvFUNCTION NAME="Module_Description" PARAMETERS="module var" STANDARDOUTPUTLEVEL="">
	<MvASSIGN NAME="l.module:code"		VALUE="spliced-sql">
	<MvASSIGN NAME="l.module:name"		VALUE="SQL Queries">
	<MvASSIGN NAME="l.module:provider"	VALUE="Spliced Media">
	<MvASSIGN NAME="l.module:author"	VALUE="Gassan Idriss">
	<MvASSIGN NAME="l.module:version"	VALUE="0.5">
	<MvASSIGN NAME="l.module:api_ver"	VALUE="5.60">
	<MvASSIGN NAME="l.module:features"	VALUE="util, vis_util, component, data_store, vis_store">
</MvFUNCTION>

<MvFUNCTION NAME="Module_Install_Store" PARAMETERS="module var" STANDARDOUTPUTLEVEL="" ERROROUTPUTLEVEL="">
    <MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'mvdo',  l.module:code ) }">
        <MvFUNCTIONRETURN VALUE = 0>
    </MvIF>

    <MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="Module_Uninstall_Store" PARAMETERS="module var" STANDARDOUTPUTLEVEL="" ERROROUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="Module_Store_Validate" PARAMETERS="module var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="Module_Upgrade_Store" PARAMETERS="module var, version" STANDARDOUTPUTLEVEL="" ERROROUTPUTLEVEL="">
    <MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'mvdo', l.null ) }">
        <MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'mvdo',  l.module:code ) }">
            <MvFUNCTIONRETURN VALUE = 0>
        </MvIF>
    </MvIF>

    <MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Initialize" PARAMETERS="module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Render_Start" PARAMETERS="module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL="text, html, compresswhitespace">

	<MvASSIGN NAME="l.null" VALUE="Module_Description(l.bar)" />

	<MvIF EXPR="'l.settings' CIN l.param">
		<MvASSIGN NAME="l.param" VALUE="{ glosub(l.param, 'l.settings', 'l.all_settings') }" />
	</MvIF>

	<MvREFERENCE NAME="l.parameters" VARIABLE="{ l.param }">

	<MvFUNCTIONRETURN VALUE = "{ Execute_Query(l.parameters) }" />	
</MvFUNCTION>

<MvFUNCTION NAME="Module_Utility_Tabs" PARAMETERS="module var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE="SMSQL:SQL Queries">
</MvFUNCTION>

<MvFUNCTION NAME="Module_Utility_Validate" PARAMETERS="module var" STANDARDOUTPUTLEVEL="text, html, compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME="Module_Utility_Update" PARAMETERS="module var" STANDARDOUTPUTLEVEL="text, html, compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME="Module_Utility_Content" PARAMETERS="module var, tab, load_fields" STANDARDOUTPUTLEVEL="text, html, compresswhitespace">
	<MvIF EXPR = "{ l.tab NE 'SMSQL' }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	

	<style>
		.qc-btn{
			background:#008cba; 
			color: #fff; 
			padding-top: 5px; 
			padding-bottom: 5px; 
			padding-left: 8px;
			padding-right: 8px;
			font-weight:bold;
			text-decoration: none;

		}
		.qc-about-wrapper{
			width: 80%;
            margin: 0 auto;
            font-size: 12pt;
		}
	</style>

	<div class="qc-about-wrapper">
		<MvEVAL EXPR = "{ Render_About(module) }" />
		<a href="{ g.secure_adminurl $ 'Screen=SUTL&Module_Code=spliced-sql&Store_Code=' $ g.Store_Code }" class="qc-btn">Go To Query Console</a>
	</div>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation"  PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">	
	<MvEVAL EXPR = "{ [ g.Module_Admin ].LeftNavigation_Dot( l.indent - 1, 'Screen=SUTL&Store_Code=' $ encodeattribute( g.Store:code ) $ '&Module_Code=' $ encodeattribute( l.module:code ), 'Main', 'SQL Queries' ) }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">

	<head>
	    <meta charset="utf-8">
	    <meta http-equiv="X-UA-Compatible" content="IE=edge">
	    <meta name="viewport" content="width=device-width, initial-scale=1">
		<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
		<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
		<link href="//maxcdn.bootstrapcdn.com/bootswatch/3.2.0/yeti/bootstrap.min.css" rel="stylesheet">
		<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css">
		<style>
			.copyright{
				margn-top: 20px;
			}
		</style>
	</head>
	<body>
		<div class="container-fluid">
		<ul class="nav nav-tabs" role="tablist">
		  <li class="active"><a href="#query-tab" role="tab" data-toggle="tab">Query</a></li>
		  <li><a href="#about-tab" role="tab" data-toggle="tab">About</a></li>
		</ul>

		<!-- Tab panes -->
		<div class="tab-content">
		  <div class="tab-pane active" id="query-tab">
		  	<MvEVAL EXPR = "{ Render_Query_Form(module) }" />

			<MvIF EXPR = "{ NOT ISNULL g.query }">
				<MvASSIGN NAME = "l.parameters:query" VALUE = "{ g.query }" />
				<MvASSIGN NAME = "l.parameters:assign_error" VALUE = "1" />
				
				<MvIFNDEF  NAME="DEV"> <MvCOMMENT>| We hide the error in production because we display the error ourselves if there is one.</MvCOMMENT>
					<div style="display:none;">
				</MvIFNDEF>

				<MvASSIGN NAME = "l.result" VALUE = "{ Execute_Query(l.parameters) }" />

				<MvIFNDEF  NAME="DEV">
					</div>
				</MvIFNDEF>
				<MvEVAL EXPR = "{ Render_Query_Results(l.parameters) }" />
			</MvIF>
		  </div>
		  <div class="tab-pane" id="about-tab">
	        	<div class="row">
	        		<div class="col-lg-6 col-md-6">					
				        <MvEVAL EXPR = "{ Render_About(l.module) }" />
					</div>
					<div class="col-lg-6 col-md-6">
						<a href="http://www.github.com/ghassani" class="btn btn-success" target="_blank"><i class="fa fa-github"></i>
		                <a href="http://www.github.com/splicedmedia" class="btn btn-success" target="_blank"><i class="fa fa-github"></i></a>
					</div>
				</div>
		  	</div>
		</div>


		</div>
	</body>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "Render_About" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<style>
        .spliced-sql-about-wrapper{

        }
        .spliced-sql-about-wrapper code{
            border-left: 3px solid #c1c1c1; 
            padding-left: 5px;
        }
        .spliced-sql-about-wrapper em{
            background: #F3F3F3;
            padding: 1px;
        }
	</style>
	<div class="spliced-sql-about-wrapper">
		<h1>SQL Query Component</h1>

	    <p>Version: <MvEVAL EXPR="{ l.module:version }" /></p>

		<p>This utility component allows you to execute SQL queries from Miva Script Templates.</p>

		<p>You will also need to assign it to any page you wish to use its functionality on.</p>

		<p>When you call the component, the param passed to the item must be a literal string to
		a global or local array containing the following members:</p>

		
		<div><code>- array:query - String - This holds the actual query to be executed. You can use ? for placeholders</code></div>
		<div><code>- array:bind_paramters - Array - This should be an array for placeholders set in your query with ?</code></div>


		<p>After you execute the query, the same array passed as a parameter gets the following members:</p>

		<div><code>- array:results - Int|Array - This will be populated with rows from SELECT or EXPLAIN, or INT from UPDATE, INSERT, DELETE, etc</code></div>
		<div><code>- array:fields - Array|null - This will be populated with an array of fields from SELECT or EXPLAIN, or NULL from UPDATE, INSERT, DELETE, etc</code></div>
		<div><code>- array:query_type - String - This will be populated with the type of query being executed (SELECT, EXPLAIN, etc)</code></div>

		<p>For Example:</p>

		<div><code>&#x3C;mvt:assign name=&#x22;l.settings:query:query&#x22; value=&#x22;&#x27;SELECT * FROM s01_Products WHERE code = ?&#x27;&#x22; /&#x3E;</code></div>
		<div><code>&#x3C;mvt:assign name=&#x22;l.settings:query:bind_parameters[1]&#x22; value=&#x22;&#x27;bar&#x27;&#x22; /&#x3E;</code></div>
		<div><code>&#x3C;mvt:item name=&#x22;sql&#x22; param=&#x22;l.settings:query&#x22; /&#x3E;</code></div>
		<div><code>&nbsp;</code></div>
		<div><code>&#x3C;mvt:foreach iterator=&#x22;row&#x22; array=&#x22;query:results&#x22;&#x3E;</code></div>
		<div><code>&nbsp;&nbsp;&#x26;mvte:row:name;</code></div>
		<div><code>&#x3C;/mvt:foreach&#x3E;</code></div>

	    <p>&copy; 2014 <a href="http://www.gassanidriss.com" target="_blank">Gassan Idriss</a> &amp; <a href="http://www.splicedmedia.com" target="_blank">Spliced Media L.L.C</a></p>

	    <p>SQL Query Component is free software: you can redistribute it and/or modify
	    it under the terms of the GNU General Public License as published by
	    the Free Software Foundation, either version 3 of the License, or
	    (at your option) any later version.</p>

	    <p> You should have received a copy of the GNU General Public License
	    along with SQL Query Component.  If not, see <<a href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</a>>.

	    <p>You can download source code, as well as get updated versions from the 
	    <a href="https://github.com/ghassani/miva-sql-component" target="_blank">offical GitHub repository</a>.</p>
	</div>

</MvFUNCTION>

<MvFUNCTION NAME = "Render_Query_Form" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.base_link" VALUE = "{ g.secure_adminurl $ 'Screen=SUTL&Module_Code=spliced-sql&Store_Code=' $ g.Store_Code }" />

	<div class="alert alert-info alert-sm">
		<i class="fa fa-warning"></i> This utility can break your store if you do not know what you are doing.
	</div>
	
	<form method="post" action="{ l.base_link }" role="form" id="query-form">
		<div class="row">
			<div class="col-lg-12 col-md-12">
				<div class="form-group">
					<label for="query">Execute a Query</label>
					<textarea name="query" id="query-statement" class="form-control" placeholder="Supported Query Types: SELECT, INSERT, UPDATE, DELETE, EXPLAIN, SHOW, ALTER, DROP" style=""><MvEVAL EXPR = "{ g.query }" /></textarea>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-lg-12 col-md-12 text-right">
				<button type="submit" class="btn btn-primary"><i class="fa fa-cogs"></i> Execute</button>
			</div>
		</div>
	</form>

	<div class="modal fade" id="confirmQueryModal" tabindex="-1" role="dialog" aria-labelledby="confirmQueryLabel" aria-hidden="true">
	    <div class="modal-dialog">
	        <div class="modal-content">
	            <div class="modal-header">
	                <button type="button" class="close" data-dismiss="modal">
	                    <span aria-hidden="true">&times;</span>
	                    <span class="sr-only">Close</span>
	                </button>
	                <h4 class="modal-title" id="confirmQueryLabel">Confirm</h4>
	            </div>
	            <div class="modal-body">
	                <p>Your query can effect database records. Are you sure you wish to execute this query?</p>
	            </div>
	            <div class="modal-footer">
	                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
	                <button type="button" class="btn btn-primary" id="execute-modal">Execute</button>
	            </div>
	        </div>
	    </div>
	</div>


	<script>
		var $form = $('#query-form');
		var $query = $('#query-statement');

		$form.on('submit', function(e){
			
			var query = $query.val().toUpperCase();

			if(!query.length){
				return false;
			}

			if(query.indexOf('SELECT') > -1 || query.indexOf('EXPLAIN') > -1 || query.indexOf('SHOW') > -1){
				return true;
			}

			var $modal = $("#confirmQueryModal").modal();

			return false;
		});

		$("#execute-modal").on('click', function(e){
			document.getElementById('query-form').submit();
		});
	</script>
</MvFUNCTION>


<MvFUNCTION NAME = "Render_Query_Results" PARAMETERS = "parameters var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	
	<div class="page-title">
		<h2>Query Results <small><MvEVAL EXPR = "{ l.parameters:query_type }" /> QUERY</small></h2>
	</div>

	<MvIF EXPR = "{ l.parameters:query_type EQ 'SELECT' OR l.parameters:query_type EQ 'EXPLAIN' OR l.parameters:query_type EQ 'SHOW' }">
		<table width="100%" class="table table-hover table-striped table-condensed table-bordered">
			<thead>
				<tr>
					<MvFOREACH ITERATOR = "l.field" ARRAY = "l.parameters:fields" INDEX = "l.index">
						<th><MvEVAL EXPR = "{ l.field:field_name }" /> [<MvEVAL EXPR = "{ l.field:field_type }" />(<MvEVAL EXPR = "{ l.field:field_len }" />)]</th>
					</MvFOREACH>
				</tr>
			</thead>
			<tbody>
				<MvIF EXPR = "{ NOT ISNULL l.parameters:error }">
					<tr class="danger">
						<td colspan="{ miva_array_elements(l.parameters:fields) }" class="text-center"><strong><MvEVAL EXPR = "{ l.parameters:error }" /></strong></td>
					</tr>
				<MvELSEIF EXPR = "{ miva_array_elements(l.parameters:results) EQ 0 }">
					<tr class="info">
						<td colspan="{ miva_array_elements(l.parameters:fields) }" class="text-center"><strong>No Results Returned</strong></td>
					</tr>
				</MvIF>
				<MvFOREACH ITERATOR = "l.result" ARRAY = "l.parameters:results" INDEX = "l.row_index">
					<tr>
						<MvFOREACH ITERATOR = "l.field" ARRAY = "l.parameters:fields" INDEX = "l.index">
							<td><MvEVAL EXPR = "{ encodeentities(miva_variable_value('l.parameters:results[' $ l.row_index $ ']:' $ l.field:field_name )) }" /></td>
						</MvFOREACH>
					</tr>
				</MvFOREACH>
			</tbody>
		</table>	
	<MvELSE>
		<table width="100%" class="table table-hover table-striped table-condensed table-bordered">
			<tbody>
				<tr>
					<td class="text-center"><strong>No Result Set For Query Type. If you do not see an error, everything went ok.</strong></td>
				</tr>
			</tbody>
		</table>
	</MvIF>
</MvFUNCTION>


<MvFUNCTION NAME = "Execute_Query" PARAMETERS = "parameters var" STANDARDOUTPUTLEVEL = "">
	
	<MvIF EXPR="{ NOT len(l.parameters:query) GT 0 }">
		
		<MvIF EXPR="{ l.parameters:assign_error EQ 1 }">
			<MvASSIGN NAME = "l.parameters:error" VALUE="{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = 0 />
		<MvELSE>
			<MvFUNCTIONRETURN VALUE="{ [ g.Module_Library_Utilities ].Error( 'SQL-QUERIES-0002', 'No Query Found Although One Was Expected' ) }">
		</MvIF>
	</MvIF>

	<MvCOMMENT>Determine what type of query was passed</MvCOMMENT>
	<MvASSIGN NAME="l.parameters:query" VALUE="{ trim(l.parameters:query) }" />
	<MvIF EXPR="{ indexofi('SELECT', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="SELECT" />

	<MvELSEIF EXPR="{ indexofi('INSERT', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="INSERT" />

	<MvELSEIF EXPR="{ indexofi('UPDATE', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="UPDATE" />

	<MvELSEIF EXPR="{ indexofi('DELETE', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="DELETE" />

	<MvELSEIF EXPR="{ indexofi('EXPLAIN', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="EXPLAIN" />

	<MvELSEIF EXPR="{ indexofi('DROP', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="DROP" />

	<MvELSEIF EXPR="{ indexofi('CREATE', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="CREATE" />

	<MvELSEIF EXPR="{ indexofi('ALTER', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="ALTER" />

	<MvELSEIF EXPR="{ indexofi('SHOW', l.parameters:query, 1) EQ 1 }">
		<MvASSIGN NAME="l.parameters:query_type" VALUE="SHOW" />

	<MvELSE>
		<MvASSIGN NAME="l.parameters:query_type" VALUE="OTHER" />
	</MvIF>

	<MvCOMMENT>Build Prepared Query Bind Parameters</MvCOMMENT>
	<MvIF EXPR="{ miva_array_elements(l.parameters:bind_parameters) GT 0 AND miva_array_collapse(l.parameters:bind_parameters) }">
		<MvFOREACH ITERATOR="l.bind_parameter" ARRAY="l.parameters:bind_parameters" INDEX="l.index">
			<MvIF EXPR="{ l.index EQ 1 }">
				<MvASSIGN NAME="l.parameters:bind_parameter_list" VALUE="{ 'l.parameters:bind_parameters[' $ l.index $ ']' }" />
			<MvELSE>
				<MvASSIGN NAME="l.parameters:bind_parameter_list" VALUE="{ l.parameters:bind_parameter_list $ ', l.parameters:bind_parameters[' $ l.index $ ']' }" />
			</MvIF>
		</MvFOREACH>		
	</MvIF>

	<MvCOMMENT>If the passed parameter structure contains a result set, lets clear it out before loading the new one</MvCOMMENT>
	<MvIF EXPR="{ miva_array_elements(l.parameters:results) }">
		<MvASSIGN NAME="l.null" VALUE="{ miva_array_clear(l.parameters:results, 1, miva_array_elements(l.parameters:results)) }">
	</MvIF>

	<MvCOMMENT>Execute the Query</MvCOMMENT>
	<MvIF EXPR="{ l.parameters:query_type EQ 'SELECT' OR l.parameters:query_type EQ 'EXPLAIN' OR l.parameters:query_type EQ 'SHOW' }">
		<MvOPENVIEW NAME= "Merchant" VIEW="SQL" QUERY="{ l.parameters:query }" FIELDS= "{ l.parameters:bind_parameter_list }">

			<MvIF EXPR="{ g.MvOPENVIEW_Error }">
				<MvIF EXPR="{ l.parameters:assign_error EQ 1 }">
					<MvASSIGN NAME = "l.parameters:error" VALUE="{ g.MvOPENVIEW_Error }">
					<MvFUNCTIONRETURN VALUE = 0 />
				<MvELSE>
					<MvFUNCTIONRETURN VALUE="{ [ g.Module_Library_Utilities ].Error( 'SQL-QUERY-0001', g.MvOPENVIEW_Error ) }">
				</MvIF>
			</MvIF>

			
			<MvCOMMENT>Determine what fields we have from this query result set to build the result array</MvCOMMENT>
			<MvREVEALSTRUCTURE NAME="MERCHANT" VIEW="SQL" VARIABLE="l.fields">

			<MvCOMMENT>Build an array of the result sets in the data structure passed to this function</MvCOMMENT>
			<MvASSIGN NAME="l.index" VALUE="1">
			<MvWHILE EXPR="{ NOT SQL.d.EOF }">
				<MvFOREACH ITERATOR="l.field" ARRAY="l.fields" INDEX="l.field_index">
					<MvASSIGN NAME="l.parameters:results" INDEX="{ l.index }" MEMBER="{ l.field:field_name }" VALUE="{ miva_variable_value('SQL.d.' $ l.field:field_name) }">
				</MvFOREACH>

				<MvASSIGN NAME="l.index" VALUE="{ l.index +1 }">
				<MvSKIP NAME="Merchant" VIEW="SQL" ROWS=1>
			</MvWHILE>

			<MvASSIGN NAME="l.parameters:fields" VALUE="{ l.fields }" />
			
		<MvCLOSEVIEW NAME="Merchant" VIEW="SQL">
	<MvELSE>
		<MvTRANSACT NAME="Merchant">
			<MvQUERY NAME="Merchant" QUERY="{ l.parameters:query }" FIELDS= "{ l.parameters:bind_parameter_list }">

			<MvIF EXPR="{ g.MvQUERY_Error }">
				<MvROLLBACK NAME="Merchant">
				<MvIF EXPR="{ l.parameters:assign_error EQ 1 }">
					<MvASSIGN NAME = "l.parameters:error" VALUE="{ g.MvOPENVIEW_Error }">
					<MvFUNCTIONRETURN VALUE = 0 />
				<MvELSE>
					<MvFUNCTIONRETURN VALUE="{ [ g.Module_Library_Utilities ].Error( 'SQL-QUERIES-0001', g.MvQUERY_Error ) }">
				</MvIF>
				
			</MvIF>

			<MvASSIGN NAME="l.parameters:results" VALUE="1">
		<MvCOMMIT NAME="Merchant">
	</MvIF>
</MvFUNCTION>


<MvFUNCTION NAME="ComponentModule_Render_End" PARAMETERS="module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL="">
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Tabs" PARAMETERS="module var, item, settings var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE="">
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Validate" PARAMETERS="module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Update" PARAMETERS="module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Content" PARAMETERS="module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL="">
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Defaults" PARAMETERS="module var, settings var" STANDARDOUTPUTLEVEL="">
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Page_Assign" PARAMETERS="module var, page var, item, settings var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="ComponentModule_Page_Unassign" PARAMETERS="module var, page var, item, settings var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE=1>
</MvFUNCTION>

<MvFUNCTION NAME="Module_Store_Tabs" PARAMETERS="module var" STANDARDOUTPUTLEVEL="">
	<MvFUNCTIONRETURN VALUE="">
</MvFUNCTION>

<MvFUNCTION NAME="Module_Store_Content" PARAMETERS="module var, tab, load_fields" STANDARDOUTPUTLEVEL="text, html, compresswhitespace">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>
